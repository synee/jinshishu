// Generated by CoffeeScript 1.8.0
(function() {
  var app;

  app = angular.module('jinshishu', ['ngRoute', 'ngCookies', 'ui.bootstrap', 'ngCommunity']).run(function($http, $cookies) {
    return $http.defaults.headers.post['X-CSRFToken'] = $cookies['csrftoken'];
  }).config(function($httpProvider) {
    return $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
  }).factory("paramsTraditional", [
    function() {
      var buildParams;
      buildParams = function(prefix, obj, traditional, add) {
        var i, name, v, value, _i, _j, _len, _len1, _results, _results1;
        if (Array.isArray(obj)) {
          _results = [];
          for (i = _i = 0, _len = obj.length; _i < _len; i = ++_i) {
            v = obj[i];
            if (traditional || /\[\]$/.test(prefix)) {
              _results.push(add(prefix, v));
            } else {
              _results.push(buildParams("" + prefix + "[" + (typeof v === "object" ? i : "") + "]", v, traditional, add));
            }
          }
          return _results;
        } else if (!traditional && typeof obj === "object") {
          _results1 = [];
          for (value = _j = 0, _len1 = obj.length; _j < _len1; value = ++_j) {
            name = obj[value];
            _results1.push(buildParams("" + prefix + "[" + name + "]", value, traditional, add));
          }
          return _results1;
        } else {
          return add(prefix, obj);
        }
      };
      return function(a, traditional) {
        var add, item, prefix, s, value, _i, _len;
        if (traditional == null) {
          traditional = true;
        }
        prefix;
        s = [];
        add = function(key, value) {
          value = typeof value === "function" ? value() : (value === null ? "" : value);
          return s[s.length] = "" + (encodeURIComponent(key)) + "=" + (encodeURIComponent(value));
        };
        if (Array.isArray(a)) {
          for (_i = 0, _len = a.length; _i < _len; _i++) {
            item = a[_i];
            add(item.name, item.value);
          }
        } else {
          for (prefix in a) {
            value = a[prefix];
            buildParams(prefix, value, traditional, add);
          }
        }
        return s.join("&").replace(/%20/g, "+");
      };
    }
  ]).directive('input', [
    '$parse', function($parse) {
      return {
        restrict: 'E',
        require: '?ngModel',
        link: function(scope, element, attrs) {
          if (attrs.value && $parse(attrs.ngModel).assign) {
            return $parse(attrs.ngModel).assign(scope, attrs.value);
          }
        }
      };
    }
  ]).directive('textarea', [
    '$parse', function($parse) {
      return {
        restrict: 'E',
        require: '?ngModel',
        link: function(scope, element, attrs) {
          if (!scope.form) {
            return;
          }
          scope.form[attrs.name] = element.val();
          if (attrs.value && $parse(attrs.ngModel).assign) {
            return $parse(attrs.ngModel).assign(scope, attrs.value);
          }
        }
      };
    }
  ]).directive('option', [
    '$parse', function($parse) {
      return {
        restrict: 'E',
        require: '?ngModel',
        link: function(scope, element, attrs) {
          if (attrs.selected) {
            return element[0].selected = true;
          }
        }
      };
    }
  ]).directive('form', [
    '$parse', '$http', 'paramsTraditional', function($parse, $http, paramsTraditional) {
      return {
        restrict: 'E',
        require: '?ngModel',
        link: function(scope, element, attrs) {
          return scope.submit = function() {
            return $http({
              method: "post",
              url: attrs.actionUrl,
              data: paramsTraditional(this.form),
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
              }
            }).success(function(resp) {
              return console.log(resp);
            });
          };
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=main.js.map
